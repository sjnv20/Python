# Q.피보나치 수

# 피보나치 수열에 포함되는 수를 피보나치 수라고 한다. 피보나치 수열은 첫째항과 둘째항이 1이고,
# 그 뒤 모든 항은 바로 앞 두 항의 합으로 정의되는 수열이다
# Fi를 i번째 피보나치 수라고 했을 때, 피보나치 수열을 수식으로 정의하면 아래와 같다.
# 양의 정수 K가 주어질 때 Fk의 값을 구해보자. 단, 값이 매우 클 수 있으니 이를 1 000 000 007로 나눈 나머지를 대신 출력한다.

# 입력
# 첫째 줄에 양의 정수 K가 주어진다,

# 출력
# F(K)를 1 000 000 007로 나눈 나머지를 출력

#<다이나믹 프로그래밍>
'''
6
_
8

10
_
55

'''

N = int(input())
fib = [1, 1]
for i in range(100000):
    fib.append((fib[-1] + fib[-2]) % 1000000007)
print(fib[N - 1])

# =====================================
import sys

sys.setrecursionlimit(111111)

# 이 정해 코드를 그냥 실행하면 스택 메모리 제한으로 인해 일부 테스트 케이스를 통과하지 못합니다.
# 아래 주석 처리된 코드와 같이 실행하면, 스택 메모리 제한을 임시적으로 조금 늘려서 문제를 해결할 수 있습니다.
# 시스템에 직접 접근하는 코드이므로, 일반적으로 코딩 테스트를 응시할 때는 사용하면 안되는 코드입니다!!

'''
import resource
resource.setrlimit(resource.RLIMIT_STACK, (64 * 1024 * 1024, -1))
'''

MOD = 10 ** 9 + 7
F = [-1 for _ in range(100008)]


def fib(n):
    if F[n] != -1:
        return F[n]
    if n <= 2:
        return 1
    F[n] = (fib(n - 1) + fib(n - 2)) % MOD
    return F[n]


N = int(input())
print(fib(N))